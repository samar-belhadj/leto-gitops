podTemplate(
  inheritFrom: 'jenkins-agent',
  containers: [
    containerTemplate(name: 'docker-container', image: 'docker:19.03.1-dind', alwaysPullImage: false, ttyEnabled: true, command: 'cat'),
    containerTemplate(name: 'node-container', image: ' bitnami/node:18.4.0', alwaysPullImage: false, ttyEnabled: true, command: 'cat'),
  ]
){
  node(POD_LABEL) {
    
    stage('Checkout leto project') {
      withCredentials([usernamePassword(credentialsId: 'github', passwordVariable: 'GIT_PASSWORD', usernameVariable: 'GIT_USERNAME')]) {
        checkout([$class: 'GitSCM', branches: [[name: "main"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'leto-modelizer']], userRemoteConfigs: [[url: 'https://github.com/samar-belhadj/leto-modelizer.git']]])
        checkout([$class: 'GitSCM', branches: [[name: "main"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'leto-modelizer-plugin-core']], userRemoteConfigs: [[url: 'https://github.com/samar-belhadj/leto-modelizer-plugin-core.git']]])
        checkout([$class: 'GitSCM', branches: [[name: "main"]], extensions: [[$class: 'RelativeTargetDirectory', relativeTargetDir: 'leto-modelizer-plugin-cli']], userRemoteConfigs: [[url: 'https://github.com/samar-belhadj/leto-modelizer-plugin-cli.git']]])
        
      }
    }
    stage('Checkout cicd folder') {
      dir('leto-gitops'){
        checkout scm
      }
    }
    /*stage('Get Image Tag') {
      dir('leto-modelizer'){
        packageJSON = readJSON file: 'package.json'
        version = packageJSON.version
        image_tag = "${env.BUILD_ID}-${version}"
      }
    }*/
    stage('Prepare Plugins') {
      dir('leto-modelizer') {
        sh """
        rm -rf package-lock.json
        sed -i 's,github:ditrit/,git+https://github.com/samar-belhadj/,g' package.json
        sed -i 's,leto-modelizer-plugin-core#.*",leto-modelizer-plugin-core",g' package.json
        sed -i 's,leto-modelizer-plugin-cli#.*",leto-modelizer-plugin-cli",g' package.json
        """
      }
      dir('leto-modelizer-plugin-core') {
        sh """
        rm -rf package-lock.json demo/package-lock.json
        sed -i 's,github:ditrit/,git+https://github.com/samar-belhadj/,g' package.json
        """
      }
      
     
    }


    stage('Build / Tests') {
      container('node-container') {
        
          dir('leto-modelizer') {
            sh """
            npm install -g npm@8.19.3
            node -v
            npm -v
            cat package.json
            npm install
            npm run build
            """
          }
          dir('leto-modelizer-plugin-core') {
            sh """
            npm install
            npm run build
            (cd demo && npm install && npx vue-cli-service build)
            sed -i 's,/js,./js,g' demo/dist/index.html # make paths relative to work in subfolder
            mv demo/dist ../leto-modelizer/dist/spa/demo
            """
          }
        
      }
    }
    
    
   
   
  }
}